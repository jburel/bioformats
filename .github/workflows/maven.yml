# Builds using maven
# Pass the arguments you wish to run to maven_commands variable, default command will be mvn install
---
name: Maven

on: 
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    strategy:
      matrix:
        java: [1.8]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      maven_commands: install # default is install
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Get server
        id: get_server
        run: |
          if [${{ github.ref }} == 'develop']; then
            echo ::set-output name=server::'ome.staging'
          else
            echo ::set-output name=server::'ome.staging'
          fi
      - name: Build
        run: mvn ${{ env.maven_commands }}
  deploy:
    if: contains('refs/heads/develop', github.ref) || startsWith(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get server
        id: get_server
        run: |
          if [${{ github.ref }} == 'develop']; then
            echo ::set-output name=server::'ome.staging'
          else
            echo ::set-output name=server::'ome.staging'
          fi
      - name: Set up Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ${{ steps.get_server.outputs.server }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Deploy SNAPSHOT
        run: mvn deploy
        env:
          MAVEN_USERNAME: ${{ secrets.CI_DEPLOY_USER }}
          MAVEN_PASSWORD: ${{ secrets.CI_DEPLOY_PASS }}

